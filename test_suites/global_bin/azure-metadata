#!/bin/bash
#

APIVERSION="2017-04-02"

function print_help()
{
echo "azure-metadata v1.0
Use to retrieve Azure instance metadata from within a running Azure VM in Resource Manager mode.
e.g. to retrieve instance id: azure-metadata -i
		 to retrieve ami id: azure-metadata -a
		 to get help: azure-metadata --help

Usage: azure-metadata <option>
Options:
--all                     Show all metadata information for this host (also default).
#-h/--local-hostname       The local hostname of the instance.
#-o/--local-ipv4           Public IP address if launched with direct addressing; private IP address if launched with public addressing.
#-k/--kernel-id            The ID of the kernel launched with this instance, if applicable.
#-z/--availability-zone    The availability zone in which the instance launched. Same as placement
#-c/--product-codes        Product codes associated with this instance.
#-p/--public-hostname      The public hostname of the instance.
#-v/--public-ipv4          NATted public IP Address
#-u/--public-keys          Public keys. Only available if supplied at instance launch time
#-r/--ramdisk-id           The ID of the RAM disk launched with this instance, if applicable.
#-e/--reservation-id       ID of the reservation.
#-s/--security-groups      Names of the security groups the instance is launched in. Only available if supplied at instance launch time
#-d/--user-data            User-supplied data.Only available if supplied at instance launch time."
}

#check some basic configurations before running the code
#function chk_config()
#{
#	#check if run inside an azure-instance
#	x=$(curl -s http://169.254.169.254/metadata/api-version=$API_VERSION)
#	if [ $? -gt 0 ]; then
#		echo '[ERROR] Command not valid outside Azure instance. Please run this command within a running Azure instance.'
#		exit 1
#	fi
#}

# base request
function getinfo() {
	echo $(curl -H Metadata:true http://169.254.169.254/metadata/instance/$1?api-version=$APIVERSION\&format=text 2>/dev/null)
}

function print_single_param() {
	printf "%-20s $(getinfo $2)" $1
}

function print_group_param() {
	getinfo $1|tr ' ' '\n'|while read line;do printf "%-20s " $line|tr '[a-z]' '[A-Z]';getinfo $1/$line;done
}

function print_all()
{
	printf "%-20s $(uname -r)\n" "KERNEL"
	print_group_param compute
	print_group_param network/interface/0/ipv4/ipAddress/0
}

#check if run inside an EC2 instance
#chk_config

#command called in default mode
if [ "$#" -eq 0 ]; then
	print_all
fi

#start processing command line arguments
while [ "$1" != "" ]; do
	case $1 in
#	-a | --ami-id )                print_normal_metric ami-id meta-data/ami-id
#																 ;;
#	-l | --ami-launch-index )      print_normal_metric ami-launch-index meta-data/ami-launch-index
#																 ;;
#	-m | --ami-manifest-path )     print_normal_metric ami-manifest-path meta-data/ami-manifest-path
#																 ;;
#	-n | --ancestor-ami-ids )      print_normal_metric ancestor-ami-ids meta-data/ancestor-ami-ids
#																 ;;
#	-b | --block-device-mapping )  print_block-device-mapping
#																 ;;
#	-i | --instance-id )           print_normal_metric instance-id meta-data/instance-id
#																 ;;
#	-t | --instance-type )         print_normal_metric instance-type meta-data/instance-type
#																 ;;
	-h | --local-hostname )        getinfo compute/name
																 ;;
	-o | --local-ipv4 )            getinfo network/interface/0/ipv4/ipaddress/0/ipaddress
																 ;;
#	-k | --kernel-id )             print_normal_metric kernel-id meta-data/kernel-id
#																 ;;
#	-z | --availability-zone )     print_normal_metric placement meta-data/placement/availability-zone
#																 ;;
#	-c | --product-codes )         print_normal_metric product-codes meta-data/product-codes
#																 ;;
#	-p | --public-hostname )       print_normal_metric public-hostname meta-data/public-hostname
#																 ;;
	-v | --public-ipv4 )           getinfo network/interface/0/ipv4/ipaddress/0/publicip
																 ;;
#	-u | --public-keys )           print_public-keys
#																 ;;
#	-r | --ramdisk-id )            print_normal_metric ramdisk-id /meta-data/ramdisk-id
#																 ;;
#	-e | --reservation-id )        print_normal_metric reservation-id /meta-data/reservation-id
#																 ;;
#	-s | --security-groups )       print_normal_metric security-groups meta-data/security-groups
#																 ;;
	-s | --vmsize )                getinfo compute/vmSize
																 ;;
	-h | --help )                  print_help
								 exit
																 ;;
	--all )                        print_all
								 exit
																 ;;
	* )                            print_help
								 exit 1
	esac
	shift
done
